[{"/Users/ada/projects/get2gether-capstone/src/index.js":"1","/Users/ada/projects/get2gether-capstone/src/components/Home.js":"2","/Users/ada/projects/get2gether-capstone/src/components/Signup.js":"3","/Users/ada/projects/get2gether-capstone/src/App.js":"4","/Users/ada/projects/get2gether-capstone/src/reportWebVitals.js":"5","/Users/ada/projects/get2gether-capstone/src/components/Search.js":"6","/Users/ada/projects/get2gether-capstone/src/contexts/AuthContext.js":"7","/Users/ada/projects/get2gether-capstone/src/firebase.js":"8","/Users/ada/projects/get2gether-capstone/src/components/UserDashboard.js":"9","/Users/ada/projects/get2gether-capstone/src/components/Login.js":"10","/Users/ada/projects/get2gether-capstone/src/components/ForgotPassword.js":"11","/Users/ada/projects/get2gether-capstone/src/components/PrivateRoute.js":"12","/Users/ada/projects/get2gether-capstone/src/components/UpdateAccount.js":"13","/Users/ada/projects/get2gether-capstone/src/components/ProfileForm.js":"14","/Users/ada/projects/get2gether-capstone/src/components/Navigation.js":"15","/Users/ada/projects/get2gether-capstone/src/components/UpdateProfile.js":"16","/Users/ada/projects/get2gether-capstone/src/components/User.js":"17","/Users/ada/projects/get2gether-capstone/src/components/ContactForm.js":"18","/Users/ada/projects/get2gether-capstone/src/components/ContactList.js":"19","/Users/ada/projects/get2gether-capstone/src/components/UpdateContactInfo.js":"20","/Users/ada/projects/get2gether-capstone/src/components/TimeBar.js":"21","/Users/ada/projects/get2gether-capstone/src/components/Locations.js":"22"},{"size":598,"mtime":1612943210496,"results":"23","hashOfConfig":"24"},{"size":464,"mtime":1613147980669,"results":"25","hashOfConfig":"24"},{"size":2434,"mtime":1613147246511,"results":"26","hashOfConfig":"24"},{"size":3093,"mtime":1613429858544,"results":"27","hashOfConfig":"24"},{"size":362,"mtime":1612190544597,"results":"28","hashOfConfig":"24"},{"size":183,"mtime":1612413205649,"results":"29","hashOfConfig":"24"},{"size":1415,"mtime":1612981805731,"results":"30","hashOfConfig":"24"},{"size":619,"mtime":1612983524415,"results":"31","hashOfConfig":"24"},{"size":1922,"mtime":1613427831856,"results":"32","hashOfConfig":"24"},{"size":2191,"mtime":1613147249621,"results":"33","hashOfConfig":"24"},{"size":1989,"mtime":1613113164335,"results":"34","hashOfConfig":"24"},{"size":438,"mtime":1613020344338,"results":"35","hashOfConfig":"24"},{"size":2925,"mtime":1613335113924,"results":"36","hashOfConfig":"24"},{"size":5276,"mtime":1613438422589,"results":"37","hashOfConfig":"24"},{"size":1460,"mtime":1613148155320,"results":"38","hashOfConfig":"24"},{"size":5965,"mtime":1613444035584,"results":"39","hashOfConfig":"24"},{"size":2877,"mtime":1613147235538,"results":"40","hashOfConfig":"24"},{"size":5603,"mtime":1613416932219,"results":"41","hashOfConfig":"24"},{"size":3049,"mtime":1613430979640,"results":"42","hashOfConfig":"24"},{"size":4969,"mtime":1613426337790,"results":"43","hashOfConfig":"24"},{"size":5739,"mtime":1613435640559,"results":"44","hashOfConfig":"24"},{"size":5279,"mtime":1613435309405,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1d9tyy3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"/Users/ada/projects/get2gether-capstone/src/index.js",[],["106","107"],"/Users/ada/projects/get2gether-capstone/src/components/Home.js",["108"],"\nimport React from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport UserDashboard from './UserDashboard'\nimport Login from './Login'\nimport Signup from './Signup'\n\nconst Home = ({baseURL}) => {\n  const { currentUser } = useAuth();\n    return (\n        <div>\n            { currentUser ? \n                <UserDashboard baseURL={baseURL} /> \n            :\n                <Login />\n       \n            }\n        </div>\n    )\n}\n\nexport default Home;",["109","110"],"/Users/ada/projects/get2gether-capstone/src/components/Signup.js",[],["111","112"],"/Users/ada/projects/get2gether-capstone/src/App.js",["113","114","115"],"/Users/ada/projects/get2gether-capstone/src/reportWebVitals.js",[],"/Users/ada/projects/get2gether-capstone/src/components/Search.js",[],"/Users/ada/projects/get2gether-capstone/src/contexts/AuthContext.js",[],"/Users/ada/projects/get2gether-capstone/src/firebase.js",[],"/Users/ada/projects/get2gether-capstone/src/components/UserDashboard.js",["116"],"\nimport React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Card, Button, Alert } from 'react-bootstrap'\nimport Locations from './Locations'\nimport TimeBar from './TimeBar'\n// import TimeBar from './TimeBar.css'\n\nexport default function UserDashboard () {\n\n    const [error, setError] = useState('')\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n\n    async function handleLogout() {\n        setError('')\n\n        try {\n            await logout()\n            history.push('/login')\n        } catch {\n            setError('Failed to log out.')\n        }\n    }\n\n\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Profile</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <strong>Email:</strong>{currentUser.email} <br />\n                    \n                    <Link to=\"/update-profile\" className=\"btn btn-secondary w100 mt-3 mx-3\">\n                        Update Profile\n                    </Link>\n\n                    <Link to=\"/update-account\" className=\"btn btn-secondary w100 mt-3 mx-3\">\n                        Update Account\n                    </Link>\n\n                    <Link to=\"/add-contact\" className=\"btn btn-secondary w100 mt-3 mx-3\">\n                        Add Contact\n                    </Link> \n\n                    <Link to=\"/contacts-list\" className=\"btn btn-secondary w100 mt-3 mx-3\">\n                        Contacts List\n                    </Link>\n                \n                </Card.Body>\n            </Card> \n            <div className=\"w-100 text-center mt2\">\n                <Button variant=\"link\" onClick={handleLogout}>\n                    Log Out\n                </Button>\n            </div>\n\n            <Locations />\n        </>\n    )\n}",["117","118"],"/Users/ada/projects/get2gether-capstone/src/components/Login.js",["119"],"import React, { useRef, useState} from 'react';\nimport { Button, Alert, Form, Card, Container} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootswatch/dist/united/bootstrap.min.css\";\n\n\n\nexport default function Login () {\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        \n        try {\n            setError('')\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/dashboard\")\n        } catch {\n            setError('Failed to sign in')\n        }\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log In</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\n                    </Form>\n                        <div className=\"w-100 text-center mt-3\">\n                            <Link to=\"/reset-password\">Forgot Password?</Link>\n                        </div>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt2\">\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\n            </div>        \n        </>\n        \n    )\n}\n","/Users/ada/projects/get2gether-capstone/src/components/ForgotPassword.js",["120"],"import React, { useRef, useState} from 'react';\nimport { Button, Alert, Form, Card} from 'react-bootstrap';\nimport { Link,  } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootswatch/dist/united/bootstrap.min.css\";\n\n\n\nexport default function ForgotPassword () {\n\n    const emailRef = useRef()\n    const { resetPassword } = useAuth\n    const [error, setError] = useState('')\n    const [message, setMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        \n        try {\n            setMessage('')\n            setError('')\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage('An email with instructions has been sent to your inbox.')\n        } catch {\n            setError('Failed to reset')\n        }\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Reset Password</h2>\n                    {message && <Alert variant=\"success\">{message}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\n                    </Form>\n                        <div className=\"w-100 text-center mt-3\">\n                            <Link to=\"/login\">Login</Link>\n                        </div>\n                </Card.Body>\n            </Card>\n                <div className=\"w-100 text-center mt2\">\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\n                </div>        \n        </>\n        \n    )\n}\n","/Users/ada/projects/get2gether-capstone/src/components/PrivateRoute.js",[],["121","122"],"/Users/ada/projects/get2gether-capstone/src/components/UpdateAccount.js",[],["123","124"],"/Users/ada/projects/get2gether-capstone/src/components/ProfileForm.js",[],"/Users/ada/projects/get2gether-capstone/src/components/Navigation.js",["125"],"\nimport React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Card, Button, Alert } from 'react-bootstrap'\n// import Contacts from './Contacts'\n\n\nexport default function Navigation () {\n\n    const [error, setError] = useState('')\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n\n    async function handleLogout() {\n        setError('')\n\n        try {\n            await logout()\n            history.push('/login')\n        } catch {\n            setError('Failed to log out.')\n        }\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Profile</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {/* <strong>Email:</strong>{currentUser.email} */}\n                    <Link to=\"/update-profile\" className=\"btn btn-secondary w100 mt-3\">\n                        Update Profile\n                    </Link>\n                    <Link to=\"/update-account\" className=\"btn btn-secondary w100 mt-3\">\n                        Update Account\n                    </Link>\n                </Card.Body>\n            </Card> \n            <div className=\"w-100 text-center mt2\">\n                <Button variant=\"link\" onClick={handleLogout}>\n                    Log Out\n                </Button>\n            </div>\n        </>\n    )\n}\n\n","/Users/ada/projects/get2gether-capstone/src/components/UpdateProfile.js",["126"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Container, Card, Col } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\n\n\nexport default function UpdateProfile({baseURL}) {\n    const { currentUser } = useAuth();\n    const [error, setError] = useState('');\n\n    const [user, setUser] = useState({\n        auth_id: currentUser.uid,\n        full_name: currentUser.displayName || '',\n        location_info: {\n            country: '',\n            state: '',\n            city: ''\n        }\n    });\n\n    console.log(user)\n\n    const history = useHistory();\n\n    const loadUserData = () => {\n        currentUser && \n            axios.get(`${baseURL}/users/current/${currentUser.uid}`)\n                .then((response) => {\n                    const apiUser = Object.values(response.data)[0]\n\n                    if (Object.keys(response.data)[0] !== 'message') {\n                        apiUser.userID = Object.keys(response.data)[0]\n                        setUser(apiUser);\n                    } else {\n                        setError({variant: 'warning', message: apiUser})\n                    }\n                })\n                .catch((error) => {\n                    const message=`There was an error with your request. ${error.response && error.response.data.message ? error.response.data.message : error.message}`;\n                    setError({variant: 'danger', message: message});\n                    console.log(message);\n                })\n    }\n\n    useEffect(() => {\n        loadUserData();\n    }, [])\n\n\n    const handleChange = (e) => {\n        const updatedInfo = e.target.name\n        const updatedValue = e.target.value\n        const newLocation = ['country', 'state', 'city']\n\n        if (newLocation.includes(updatedInfo)) {\n            setUser({\n                ...user,\n                location_info: {\n                    ...user.location_info,\n                    [updatedInfo]: updatedValue,\n                }\n            })\n        } else {\n            setUser({\n                ...user,\n                [updatedInfo]: updatedValue,\n            })\n        }\n    }\n\n\n    //check if all fields are populated\n    const checkPopulatedFields = () => {\n        const fields =\n            Object.values(user)\n                .filter((element) => {\n                    return typeof (element) !== 'object' && typeof (element) !== 'boolean'\n                })\n                .concat(Object.values(user.location_info))\n        \n        if (fields.every((field) => field)) {\n            return true\n        } else {\n            setError({\n                variant: 'warning',\n                message: 'All fields with * must be populated.'\n            })\n            return false;\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (checkPopulatedFields()) {\n            axios.put(baseURL + '/users/' + currentUser.uid, user)\n                .then((response) => {\n                    setError({variant: 'success', message: response.data.message});\n                    history.push('/dashboard');\n                })\n                .catch((error) => {\n                    const message=`There was an error with your request. User profile was not saved. ${error.response && error.response.data.message ? error.response.data.message : error.message}.`;\n                    setError({variant: 'danger', message: message});\n                    console.log(message);\n                })\n        }\n\n    }\n\n    if (user) {\n\n    return (\n        <Container>\n            {error && <p>{error.message}</p>} \n            <Card>\n                <Card.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <h3 className='text-center mb-4'>Profile</h3>\n                        <Form.Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Full Name*</Form.Label>\n                                <Form.Control type=\"text\" name='full_name' value={user.full_name} onChange={handleChange} />\n                            </Form.Group>\n\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCountry\" >\n                                <Form.Label>Country*</Form.Label>\n                                <Form.Control name='country' value={user.location_info.country} onChange={handleChange} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId='formGridState' >\n                                <Form.Label>State*</Form.Label>\n                                <Form.Control name='state' value={user.location_info.state} onChange={handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCity\" >\n                                <Form.Label>City*</Form.Label>\n                                <Form.Control name='city' value={user.location_info.city} onChange={handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        {/* <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridAvailability\" >\n                                <Form.Label>Availability*</Form.Label>\n                                <Form.Control name='availability_info' value={user.availability_info} onChange={handleChange} />\n                            </Form.Group>\n                        </Form.Row> */}\n                        <Button variant='primary' type=\"submit\" value=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        {/* </div> */}\n    </Container>\n\n    )\n    } else {\n        return null;\n    }\n\n}","/Users/ada/projects/get2gether-capstone/src/components/User.js",["127","128","129","130","131"],"import React, {useState, useEffect, useRef} from 'react'\nimport {useRouteMatch, Link} from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport {Card, Button, Container, Row, Col, Alert, Overlay} from 'react-bootstrap';\nimport \"bootswatch/dist/united/bootstrap.min.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from 'axios';\n\n\n\nconst User = ({baseURL}) => {\n    const { currentUser } = useAuth();\n    const [user, setUser] = useState({});\n    const [error, setError] = useState('');\n    const target = useRef(null);\n\n    const match = useRouteMatch('/users/:id');\n    const userId = match.params.id\n\n    const loadUserData = () => {\n        currentUser && \n            axios.get(`${baseURL}/users/current/${currentUser.uid}`)\n                .then((response) => {\n                    const apiUser = Object.values(response.data)[0]\n                    if (Object.keys(response.data)[0] !== 'message') {\n                        apiUser.userID = Object.keys(response.data)[0];\n                        // setCurrentOwner(apiUser);\n                    } else {\n                        setError({variant: 'warning', message: apiUser})\n                    }\n                })\n                .catch((error) => {\n                    console.log(error.response)\n                    console.log(error.message)\n                    const message=`There was an error with your request. ${error.response && error.response.data.message ? error.response.data.message : error.message}`\n                    setError({variant: 'danger', message: message});\n                    console.log(message);\n                })\n    }\n\n    useEffect(() => {\n        loadUserData();\n    }, [])\n\n    useEffect(() => {\n        axios.get(`${baseURL}/users/${userId}`)\n            .then((response) => {\n                const apiUser = response.data\n                setUser(apiUser);\n            })\n            .catch((error) => {\n                const message=`There was an error with your request. ${error.response && error.response.data.message ? error.response.data.message : error.message}`;\n                setError({variant: 'danger', message: message});\n                console.log(message);\n            })\n    }, [baseURL, userId])\n\n    const showUserData = () => {\n        return (\n            <Container>\n                <Card>\n                    <Row>\n                        <Col>\n                            <Card.Title>{user.full_name}</Card.Title>\n                        </Col>\n                    </Row>\n                    <Card.Body>\n                        \n                    </Card.Body>\n                </Card>\n            </Container>\n        )\n    }\n\n    return (\n        <div>\n            { error.message && <Alert variant={error.variant}>{error.message}</Alert>}\n            {showUserData()}\n        </div>\n    )\n\n}\n\n\nexport default User;","/Users/ada/projects/get2gether-capstone/src/components/ContactForm.js",[],"/Users/ada/projects/get2gether-capstone/src/components/ContactList.js",["132"],"import React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext';\nimport {Card, Container, Row, Col} from 'react-bootstrap';\nimport \"bootswatch/dist/united/bootstrap.min.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from 'axios';\n\n\nexport default function ContactList({baseURL, onContactSelected}) {\n    const { currentUser } = useAuth();\n    const [contactsList, setContactsList] = useState(null);\n    const [error, setError] = useState('');\n    const history = useHistory();\n\n\n    const loadContactsList = () => {\n        currentUser && \n            axios.get(`${baseURL}/contacts_list/${currentUser.uid}`)\n                .then((response) => {\n                    const apiContactsList = Object.values(response.data.result)\n                    if (Object.keys(response.data.result) !== 'message') {\n                        setContactsList(apiContactsList);\n                    } else {\n                        setError({variant: 'warning', message: Object.values(response.data)[0]})\n                    }\n                })\n                .catch((error) => {\n                    const message=`There was an error with your request. ${error.response && error.response.data.message ? error.response.data.message : error.message}`;\n                    setError({variant: 'danger', message: message});\n                    console.log(message);\n                })\n    }   \n\n    useEffect(() => {\n        loadContactsList();\n    }, [])\n    \n\n\n\n\n    const showContactList = () => {\n        let res = [];\n        for (let i=0; i < contactsList.length; i++) {\n            const updateContact = (e) => {\n                onContactSelected(contactsList[i])\n                history.push('/update-contact')\n            }\n\n            res.push(\n            <Container key={contactsList[i].contact_id}>\n                {error && <p>{error.message}</p>} \n                <Card>\n                    <Row>\n                        <Col>\n                            <Card.Title className=\"text-center mb-4 mx-2\"><button style={{background: 'none', border: 'none'}} onClick={updateContact}>{contactsList[i].name}</button></Card.Title> \n                        </Col>\n                    </Row>\n                    <Card.Body>\n                        <div>\n                            <ul>\n                                <li>{contactsList[i].nickname}</li>\n                                <li>{contactsList[i].location_info.country}, {contactsList[i].location_info.state}, {contactsList[i].location_info.city}</li>\n                            </ul>\n\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container>\n            )\n        }\n        return res\n    }\n    \n    if (contactsList) {\n        return (\n            <div>\n                {/* { error.message && <Alert variant={error.variant}>{error.message}</Alert>} */}\n                {showContactList()}\n            </div>\n    )} else {\n        return null\n    }\n}","/Users/ada/projects/get2gether-capstone/src/components/UpdateContactInfo.js",[],"/Users/ada/projects/get2gether-capstone/src/components/TimeBar.js",["133","134"],"import React from 'react' \nimport Timebar from './TimeBar.css'\nimport {useEffect, useState} from \"react\";\n\nconst testOutput = {\n    \"geo\": {\"country\": \"United Kingdom\", \"state\": \"England\", \"city\": \"London\", \"latitude\": 51.505182, \"longitude\": -0.0999387},\n    \"timezone\": \"Europe/London\",\n    \"timezone_offset\": 0,\n    \"date\": \"2021-02-15\",\n    \"date_time\": \"2021-02-15 07:00:42\",\n    \"date_time_txt\": \"Monday, February 15, 2021 07:00:42\",\n    \"date_time_wti\": \"Mon, 15 Feb 2021 07:00:42 +0000\",\n    \"date_time_ymd\": \"2021-02-15T07:00:42+0000\",\n    \"date_time_unix\": 1613372442.965,\n    \"time_24\": \"07:00:42\",\n    \"time_12\": \"07:00:42 AM\",\n    \"week\": \"08\",\n    \"month\": \"02\",\n    \"year\": \"2021\",\n    \"year_abbr\": \"21\",\n    \"is_dst\": false,\n    \"dst_savings\": 1\n};\n\nconst geolocationApi = process.env.REACT_APP_IP_GEOLOCATION_API_KEY\n\nexport default function TimeBar(props) {\n    const [dstTzInfo, setDstTzInfo] = useState();\n    const [date, setDate] = useState(props.date);\n    const srcTzInfo = props.srcTzInfo;\n    const dstLocation = props.destination_location;\n\n    useEffect(() => {\n        fetch(`https://api.ipgeolocation.io/timezone?apiKey=${geolocationApi}&location=`\n            // fetch(\"https://google.com/timezone?apiKey=thiswillfail&location=\"\n            + encodeURIComponent(`${dstLocation.city}, ${dstLocation.state}, ${dstLocation.country}`))\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    setDstTzInfo(result);\n                    setDate(changeTimezone(date, result.timezone));\n                },\n                (error) => {\n                    console.log(error);\n                    setDstTzInfo(testOutput);\n                    setDate(changeTimezone(date, testOutput.timezone));\n                }\n            )\n    }, [])\n\n    function changeTimezone(date, ianatz) {\n\n        // suppose the date is 12:00 UTC\n        const invdate = new Date(date.toLocaleString('en-US', {\n            timeZone: ianatz\n        }));\n\n        // then invdate will be 07:00 in Toronto\n        // and the diff is 5 hours\n        const diff = date.getTime() - invdate.getTime();\n\n        // so 12:00 in Toronto is 17:00 UTC\n        return new Date(date.getTime() - diff); // needs to substract\n\n    }\n\n    function signedInt(relativeOffset) {\n        return relativeOffset >= 0 ? '+' + relativeOffset : relativeOffset;\n    }\n\n    function getHoursShiftedBy(xxx) {\n        const hours = [\n            <li key=\"00\" className=\"tod_c\"><b>12</b> <u>am</u></li>,\n            <li key=\"01\" className=\"tod_n\"><b>1</b> <u>am</u></li>,\n            <li key=\"02\" className=\"tod_n\"><b>2</b> <u>am</u></li>,\n            <li key=\"03\" className=\"tod_n\"><b>3</b> <u>am</u></li>,\n            <li key=\"04\" className=\"tod_n\"><b>4</b> <u>am</u></li>,\n            <li key=\"05\" className=\"tod_n\"><b>5</b> <u>am</u></li>,\n            <li key=\"06\" className=\"tod_m\"><b>6</b> <u>am</u></li>,\n            <li key=\"07\" className=\"tod_m\"><b>7</b> <u>am</u></li>,\n            <li key=\"08\" className=\"tod_d\"><b>8</b> <u>am</u></li>,\n            <li key=\"09\" className=\"tod_d\"><b>9</b> <u>am</u></li>,\n            <li key=\"10\" className=\"tod_d\"><b>10</b> <u>am</u></li>,\n            <li key=\"11\" className=\"tod_d\"><b>11</b> <u>am</u></li>,\n            <li key=\"12\" className=\"tod_d\"><b>12</b> <u>pm</u></li>,\n            <li key=\"13\" className=\"tod_d\"><b>1</b> <u>pm</u></li>,\n            <li key=\"14\" className=\"tod_d\"><b>2</b> <u>pm</u></li>,\n            <li key=\"15\" className=\"tod_d\"><b>3</b> <u>pm</u></li>,\n            <li key=\"16\" className=\"tod_d\"><b>4</b> <u>pm</u></li>,\n            <li key=\"17\" className=\"tod_d\"><b>5</b> <u>pm</u></li>,\n            <li key=\"18\" className=\"tod_e\"><b>6</b> <u>pm</u></li>,\n            <li key=\"19\" className=\"tod_e\"><b>7</b> <u>pm</u></li>,\n            <li key=\"20\" className=\"tod_e\"><b>8</b> <u>pm</u></li>,\n            <li key=\"21\" className=\"tod_e\"><b>9</b> <u>pm</u></li>,\n            <li key=\"22\" className=\"tod_n\"><b>10</b> <u>pm</u></li>,\n            <li key=\"23\" className=\"tod_n tod_boundary\"><b>11</b> <u>pm</u></li>,\n        ];\n        return hours.slice(xxx, hours.length).concat(hours.slice(0, xxx));\n    }\n\n    if (!dstTzInfo || !srcTzInfo) return <div>Loading...</div>\n    const relativeOffset = dstTzInfo.timezone_offset - srcTzInfo.timezone_offset;\n    \n    return <div id=\"3435910\" className=\"container srt\">\n        <div className=\"name\">\n            <span>{props.name}</span>\n        </div>\n        <div className=\"icon\" title={relativeOffset + \" hours from Home (GMT\" + signedInt(srcTzInfo.timezone_offset) + \" <> GMT\" + signedInt(dstTzInfo.timezone_offset) + ')'}>\n            <span>{signedInt(relativeOffset)}</span>\n        </div>\n        <div className=\"location\">\n            <div className=\"city\"><b>{dstLocation.city}</b> <small\n                title={\"GMT\" + signedInt(srcTzInfo.timezone_offset) + \" <> GMT\" + signedInt(dstTzInfo.timezone_offset)}>{\"GMT\" + signedInt(dstTzInfo.timezone_offset)}</small></div>\n            <div className=\"country\">{dstLocation.country}</div>\n        </div>\n        <div className=\"data \">\n            <div className=\"time\">\n                <span className=\"th\">{date.getHours() % 12 || 12}</span>\n                <span className=\"ts\">:</span>\n                <span className=\"tm\">{date.getMinutes()}</span>\n                <span className=\"ampm\">{date.getHours() >= 12 ? 'pm' : 'am'}</span>\n            </div>\n            <div className=\"date\">{date.toLocaleDateString()}</div>\n        </div>\n        <div className=\"hourline\">\n            <ul className=\"_AP\">\n                { getHoursShiftedBy(relativeOffset) }\n            </ul>\n        </div>\n    </div>;\n}\n","/Users/ada/projects/get2gether-capstone/src/components/Locations.js",["135","136","137","138"],"import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport TimeBar from \"./TimeBar\";\nimport axios from 'axios'\nimport { useAuth } from '../contexts/AuthContext'\n\nconst x = {\n    \"geo\": {\"country\": \"United Kingdom\", \"state\": \"England\", \"city\": \"London\", \"latitude\": 51.505182, \"longitude\": -0.0999387},\n    \"timezone\": \"Europe/London\",\n    \"timezone_offset\": 0,\n    \"date\": \"2021-02-15\",\n    \"date_time\": \"2021-02-15 07:00:42\",\n    \"date_time_txt\": \"Monday, February 15, 2021 07:00:42\",\n    \"date_time_wti\": \"Mon, 15 Feb 2021 07:00:42 +0000\",\n    \"date_time_ymd\": \"2021-02-15T07:00:42+0000\",\n    \"date_time_unix\": 1613372442.965,\n    \"time_24\": \"07:00:42\",\n    \"time_12\": \"07:00:42 AM\",\n    \"week\": \"08\",\n    \"month\": \"02\",\n    \"year\": \"2021\",\n    \"year_abbr\": \"21\",\n    \"is_dst\": false,\n    \"dst_savings\": 1\n};\n\nconst geolocationApi = process.env.REACT_APP_IP_GEOLOCATION_API_KEY\n\nexport default function Locations({baseURL}) {\n    const [srcTzInfo, setSrcTzInfo] = useState();\n    const date = new Date();\n    const { currentUser } = useAuth();\n    const [contactsList, setContactsList] = useState(null);\n    const [error, setError] = useState('');\n    const history = useHistory();\n    const [user, setUser] = useState(null);\n    const [addedContacts, setAddedContacts] = useState([]);\n\n    useEffect(() => {\n        user &&\n        fetch(`https://api.ipgeolocation.io/timezone?apiKey=${geolocationApi}&location=`\n        // fetch(\"https://google.com/timezone?apiKey=thiswillfail&location=\"\n            + encodeURIComponent(`${user.location_info.city}, ${user.location_info.state}, ${user.location_info.country}`))\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    setSrcTzInfo(result);\n                },\n                (error) => {\n                    console.log(error);\n                    setSrcTzInfo(x);\n                }\n            )\n    }, [user])\n\n\n\n    const loadUserData = () => {\n        currentUser && \n            axios.get(`/users/current/${currentUser.uid}`)\n                .then((response) => {\n                    const apiUser = Object.values(response.data)[0]\n                    if (Object.keys(response.data)[0] !== 'message') {\n                        apiUser.userID = Object.keys(response.data)[0]\n                        setUser(apiUser);\n                    } else {\n                        setError({variant: 'warning', message: apiUser})\n                    }\n                })\n                .catch((error) => {\n                    const message=`There was an error with your request. ${error.response && error.response.data.message ? error.response.data.message : error.message}`;\n                    setError({variant: 'danger', message: message});\n                    console.log(message);\n                })\n    }\n\n    useEffect(() => {\n        loadUserData();\n    }, []);\n\n    const loadContactsList = () => {\n        currentUser && \n            axios.get(`/contacts_list/${currentUser.uid}`)\n                .then((response) => {\n                    const apiContactsList = Object.values(response.data.result)\n                    if (Object.keys(response.data.result) !== 'message') {\n                        setContactsList(apiContactsList);\n                    } else {\n                        setError({variant: 'warning', message: Object.values(response.data)[0]})\n                    }\n                })\n                .catch((error) => {\n                    const message=`There was an error with your request. ${error.response && error.response.data.message ? error.response.data.message : error.message}`;\n                    setError({variant: 'danger', message: message});\n                    console.log(message);\n                })\n    }   \n\n    useEffect(() => {\n        loadContactsList();\n    }, [])\n\n\n    const showContact = (e) => {\n        const index = document.getElementById('contacts').value\n        if (index < 0) return;\n        const newAddedContacts = [...addedContacts]\n        newAddedContacts.push(index)\n        setAddedContacts(newAddedContacts)\n    }\n\n    if (!contactsList || !user) return \"Loading...\"\n\n    return (\n        <div id=\"locations\">\n\n            <Form >\n                <h3 className='text-center mb-4'>Search Contact</h3>\n                <Form.Group controlId=\"addContact\">\n                <Form.Label>Add Contact</Form.Label>\n                    <Form.Control as=\"select\" id=\"contacts\">\n                    <option value=\"-1\">Select contact</option>\n                    {contactsList.map((c, i) => \n                        <option key={i} value={i}>{c.name}</option>\n                    )}\n                    </Form.Control>\n                </Form.Group>\n                <Button onClick={showContact}>Show contact time</Button>\n            </Form>\n            <TimeBar name={user.full_name} date={date} srcTzInfo={srcTzInfo} destination_location={user.location_info}/>\n            {addedContacts.map((c, i) =>\n                <TimeBar key={i} name={contactsList[c].name} date={date} srcTzInfo={srcTzInfo} destination_location={contactsList[c].location_info}/>\n            )}\n        </div>\n    )\n}\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":14},{"ruleId":"139","replacedBy":"147"},{"ruleId":"141","replacedBy":"148"},{"ruleId":"139","replacedBy":"149"},{"ruleId":"141","replacedBy":"150"},{"ruleId":"143","severity":1,"message":"151","line":12,"column":8,"nodeType":"145","messageId":"146","endLine":12,"endColumn":12},{"ruleId":"143","severity":1,"message":"152","line":23,"column":8,"nodeType":"145","messageId":"146","endLine":23,"endColumn":15},{"ruleId":"143","severity":1,"message":"153","line":25,"column":8,"nodeType":"145","messageId":"146","endLine":25,"endColumn":12},{"ruleId":"143","severity":1,"message":"152","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":15},{"ruleId":"139","replacedBy":"154"},{"ruleId":"141","replacedBy":"155"},{"ruleId":"143","severity":1,"message":"156","line":2,"column":37,"nodeType":"145","messageId":"146","endLine":2,"endColumn":46},{"ruleId":"143","severity":1,"message":"157","line":14,"column":12,"nodeType":"145","messageId":"146","endLine":14,"endColumn":17},{"ruleId":"139","replacedBy":"158"},{"ruleId":"141","replacedBy":"159"},{"ruleId":"139","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},{"ruleId":"143","severity":1,"message":"162","line":12,"column":13,"nodeType":"145","messageId":"146","endLine":12,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":49,"column":8,"nodeType":"165","endLine":49,"endColumn":10,"suggestions":"166"},{"ruleId":"143","severity":1,"message":"167","line":2,"column":24,"nodeType":"145","messageId":"146","endLine":2,"endColumn":28},{"ruleId":"143","severity":1,"message":"168","line":4,"column":15,"nodeType":"145","messageId":"146","endLine":4,"endColumn":21},{"ruleId":"143","severity":1,"message":"169","line":4,"column":51,"nodeType":"145","messageId":"146","endLine":4,"endColumn":58},{"ruleId":"143","severity":1,"message":"170","line":15,"column":11,"nodeType":"145","messageId":"146","endLine":15,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":43,"column":8,"nodeType":"165","endLine":43,"endColumn":10,"suggestions":"171"},{"ruleId":"163","severity":1,"message":"172","line":37,"column":8,"nodeType":"165","endLine":37,"endColumn":10,"suggestions":"173"},{"ruleId":"143","severity":1,"message":"174","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"163","severity":1,"message":"175","line":50,"column":8,"nodeType":"165","endLine":50,"endColumn":10,"suggestions":"176"},{"ruleId":"143","severity":1,"message":"157","line":35,"column":12,"nodeType":"145","messageId":"146","endLine":35,"endColumn":17},{"ruleId":"143","severity":1,"message":"177","line":36,"column":11,"nodeType":"145","messageId":"146","endLine":36,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":81,"column":8,"nodeType":"165","endLine":81,"endColumn":10,"suggestions":"178"},{"ruleId":"163","severity":1,"message":"172","line":103,"column":8,"nodeType":"165","endLine":103,"endColumn":10,"suggestions":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Signup' is defined but never used.","Identifier","unusedVar",["180"],["181"],["180"],["181"],"'Home' is defined but never used.","'TimeBar' is defined but never used.","'User' is defined but never used.",["180"],["181"],"'Container' is defined but never used.","'error' is assigned a value but never used.",["180"],["181"],["180"],["181"],"'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserData'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'Link' is defined but never used.","'Button' is defined but never used.","'Overlay' is defined but never used.","'target' is assigned a value but never used.",["183"],"React Hook useEffect has a missing dependency: 'loadContactsList'. Either include it or remove the dependency array.",["184"],"'Timebar' is defined but never used.","React Hook useEffect has missing dependencies: 'date', 'dstLocation.city', 'dstLocation.country', and 'dstLocation.state'. Either include them or remove the dependency array. You can also do a functional update 'setDate(d => ...)' if you only need 'date' in the 'setDate' call.",["185"],"'history' is assigned a value but never used.",["186"],["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"188","fix":"195"},{"desc":"191","fix":"196"},"Update the dependencies array to be: [loadUserData]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [loadContactsList]",{"range":"200","text":"201"},"Update the dependencies array to be: [date, dstLocation.city, dstLocation.country, dstLocation.state]",{"range":"202","text":"203"},{"range":"204","text":"198"},{"range":"205","text":"201"},[1631,1633],"[loadUserData]",[1704,1706],[1526,1528],"[loadContactsList]",[1845,1847],"[date, dstLocation.city, dstLocation.country, dstLocation.state]",[2996,2998],[3943,3945]]